{"version":3,"sources":["webpack:///./src/pages/Career/Job.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/api/getJobsData.tsx"],"names":["ContainerStyled","styled","Container","Heading1","h2","Typography","colors","black","Body1","h3","gray4","Heading2","primary","Heading3","p","Heading4","li","Body3","DiscList","ul","CircleList","ButtonWrapper","div","emptyJobsData","docId","headingId","content","title","depth","Job","location","useState","jobsData","setJobsData","useEffect","abortController","AbortController","signal","state","getJobDetail","details","then","resultData","abort","data-sal","data-sal-duration","data-sal-easing","map","jobDetail","index","as","style","width","href","HeaderContainer","header","Title","h1","responsive","conditionForTablet","conditionForDesktop","Header","children","mode","getAllJobs","a","fetch","response","json","catch","error","name","console","log"],"mappings":"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","file":"component---src-pages-career-job-tsx-ea4de308c2f669a817de.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\n\nimport Typography from \"../../assets/Typography\";\nimport colors from \"../../layouts/colors\";\n\nimport { getJobDetail } from \"../../api/getJobsData\";\n\nimport Header from \"../../components/Header\";\nimport Container from \"../../components/Container\";\nimport Button from \"../../components/Button\";\nimport Footer from \"../../containers/Footer\";\n\ntype Props = {\n  location: any;\n};\n\ntype JobDetailType = {\n  docId: string;\n  headingId: string;\n  content: string;\n  title: string;\n  depth: number;\n};\n\nconst ContainerStyled = styled(Container)`\n  width: 100%;\n  flex-direction: column;\n\n  font-family: \"Spoqa Han Sans Neo\", \"sans-serif\";\n`;\n\nconst Heading1 = styled.h2`\n  ${Typography(\"heading1\")};\n  color: ${colors.black};\n\n  margin-bottom: 1.6rem;\n  white-space: pre-line;\n\n  width: fit-content;\n`;\n\nconst Body1 = styled.h3`\n  ${Typography(\"body\", 1.8, 700)};\n  color: ${colors.gray4};\n\n  white-space: pre-line;\n`;\n\nconst Heading2 = styled.h3`\n  ${Typography(\"heading2\")};\n  color: ${colors.primary};\n\n  margin-bottom: 0.8rem;\n  margin-top: 6.4rem;\n\n  white-space: pre-line;\n`;\n\nconst Heading3 = styled.p`\n  ${Typography(\"body\", 1.6, 700)};\n  color: ${colors.black};\n\n  margin-bottom: 0.8rem;\n  margin-top: 1.6rem;\n\n  white-space: pre-line;\n`;\n\nconst Heading4 = styled.li`\n  ${Typography(\"body\", 1.4, 700)};\n  color: ${colors.black};\n\n  margin-bottom: 0.8rem;\n\n  white-space: pre-line;\n`;\n\nconst Body3 = styled.p`\n  ${Typography(\"body\", 1.4, 400)};\n  color: ${colors.black};\n\n  white-space: pre-line;\n`;\n\nconst DiscList = styled.ul`\n  list-style: disc;\n  list-style-position: inside;\n  word-break: keep-all;\n\n  margin: 0;\n  white-space: pre-line;\n`;\n\nconst CircleList = styled.ul`\n  list-style: circle;\n  list-style-position: outside;\n  padding-left: 3.9rem;\n  word-break: keep-all;\n\n  margin-bottom: 0.8rem;\n  white-space: pre-line;\n`;\n\nconst ButtonWrapper = styled.div`\n  margin-top: 6.4rem;\n`;\n\nfunction displayJobDetail(jobsDetailData: [JobDetailType]) {\n  return jobsDetailData.map((jobDetail: JobDetailType, index: number) => {\n    switch (jobDetail.depth) {\n      case 1:\n        return (\n          <>\n            <Heading1>{jobDetail.title}</Heading1>\n            <Body1>{jobDetail.content}</Body1>\n          </>\n        );\n      case 2:\n        return (\n          <>\n            <Heading2>{jobDetail.title}</Heading2>\n            <Body3>{jobDetail.content}</Body3>\n          </>\n        );\n      case 3:\n        return (\n          <>\n            <Heading3>{jobDetail.title}</Heading3>\n            <Body3>{jobDetail.content}</Body3>\n          </>\n        );\n      case 4:\n        return (\n          <DiscList>\n            <Heading4>{jobDetail.title}</Heading4>\n            <CircleList>\n              <Body3 as=\"li\">{jobDetail.content}</Body3>\n            </CircleList>\n          </DiscList>\n        );\n    }\n  });\n}\n\nfunction displayJobDetailSkeleton() {\n  return (\n    <>\n      <Heading1 style={{ width: \"100%\" }}>\n        <Skeleton />\n      </Heading1>\n      <Body1 style={{ width: \"100%\" }}>\n        <Skeleton />\n      </Body1>\n    </>\n  );\n}\n\nconst emptyJobsData = {\n  docId: \"\",\n  headingId: \"\",\n  content: \"\",\n  title: \"\",\n  depth: 0,\n};\n\nexport default function Job({ location }: Props) {\n  const [jobsData, setJobsData] = useState<[JobDetailType]>([emptyJobsData]);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    const signal = abortController.signal;\n\n    if (location.state) {\n      getJobDetail(location.state.details, signal).then((resultData) => {\n        setJobsData(resultData);\n      });\n    }\n    return function cleanup() {\n      abortController.abort();\n      setJobsData([emptyJobsData]);\n    };\n  }, []);\n\n  return (\n    <>\n      <Header>Career</Header>\n      <ContainerStyled\n        data-sal=\"slide-up\"\n        data-sal-duration=\"1000\"\n        data-sal-easing=\"ease\"\n      >\n        {jobsData[0].depth != 0\n          ? displayJobDetail(jobsData)\n          : displayJobDetailSkeleton()}\n        <ButtonWrapper>\n          <Button href=\"mailto:jobs@iportfolio.co.kr\">지원하기</Button>\n        </ButtonWrapper>\n      </ContainerStyled>\n      <Footer />\n    </>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { responsive } from \"../layouts/responsive\";\nimport colors from \"../layouts/colors\";\nimport Typography from \"../assets/Typography\";\n\nimport Navigation from \"../containers/Navigation\";\n\ntype Props = {\n  children: string;\n};\n\nconst HeaderContainer = styled.header`\n  width: 100%;\n  height: 235px;\n\n  color: white;\n  background-color: ${colors.black};\n\n  @media only screen and (min-width: 1040px) {\n    height: 32.6rem;\n  }\n`;\n\nconst Title = styled.h1`\n  position: relative;\n  top: calc(100% - 80px);\n  color: white;\n  padding-left: calc((100% - 32rem) / 2);\n\n  ${Typography(\"hero\")};\n  font-family: \"Roboto\", sans-serif;\n\n  @media ${responsive.conditionForTablet} {\n    padding-left: calc((100% - 70.4rem) / 2);\n  }\n\n  @media ${responsive.conditionForDesktop} {\n    padding-left: calc((100% - 96rem) / 2);\n  }\n`;\n\nfunction Header({ children }: Props) {\n  return (\n    <HeaderContainer>\n      <Navigation mode=\"dark\" />\n      <Title>{children}</Title>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","export async function getAllJobs(signal: AbortSignal) {\n  return await fetch(`https://culture.iportfolio.co.kr/api/homepage/career`, {\n    signal: signal,\n  })\n    .then((response) => response.json())\n    .catch((error) => {\n      if (error.name !== \"AbortError\") {\n        console.log(\"request failed\", error);\n      } else {\n        console.log(\"request cancelled\", error);\n      }\n    });\n}\n\nexport async function getJobDetail(details: string, signal: AbortSignal) {\n  return await fetch(`https://culture.iportfolio.co.kr/api/doc/${details}`, {\n    signal: signal,\n  })\n    .then((response) => response.json())\n    .catch((error) => {\n      if (error.name !== \"AbortError\") {\n        console.log(\"request failed\", error);\n      } else {\n        console.log(\"request cancelled\", error);\n      }\n    });\n}\n"],"sourceRoot":""}